<mxfile host="65bd71144e">
    <diagram id="RsxeEWwRD2sQFYI6MCW9" name="第 1 页">
        <mxGraphModel dx="4223" dy="3994" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;div style=&quot;color: rgb(255, 255, 255); background-color: rgb(32, 40, 49); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; font-size: 20px; line-height: 27px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// New creates a new server which logically combines the handling chain with the passed server.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// name is used to differentiate for logging. The handler chain in particular can be difficult as it starts delegating.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// delegationTarget may not be nil.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; (c completedConfig) &lt;/span&gt;&lt;span style=&quot;color: #ffc66d;&quot;&gt;New&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;(name &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;, delegationTarget DelegationTarget) (&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;GenericAPIServer, &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; c.Serializer &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil, fmt.Errorf(&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;Genericapiserver.New() called with config.Serializer == nil&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; c.LoopbackClientConfig &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil, fmt.Errorf(&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;Genericapiserver.New() called with config.LoopbackClientConfig == nil&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; c.EquivalentResourceRegistry &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil, fmt.Errorf(&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;Genericapiserver.New() called with config.EquivalentResourceRegistry == nil&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; handlerChainBuilder &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;(handler http.Handler) http.Handler {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; c.BuildHandlerChainFunc(handler, c.Config)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; apiServerHandler &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; NewAPIServerHandler(name, c.Serializer, handlerChainBuilder, delegationTarget.UnprotectedHandler())&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-727" y="162" width="1363" height="551" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;span style=&quot;text-align: left; font-size: 26px;&quot;&gt;staging/src/k8s.io/apiserver/pkg/server/config.go&lt;/span&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;fontColor=#000000;darkOpacity=0.05;fillColor=#FFF9B2;strokeColor=none;fillStyle=solid;direction=west;gradientDirection=north;gradientColor=#FFF2A1;shadow=1;size=20;pointerEvents=1;labelBackgroundColor=none;fontSize=26;" vertex="1" parent="1">
                    <mxGeometry x="-724" y="90" width="594" height="77" as="geometry"/>
                </mxCell>
                <mxCell id="9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=20;endArrow=open;startSize=14;endSize=14;sourcePerimeterSpacing=8;targetPerimeterSpacing=8;" edge="1" parent="1" source="6" target="8">
                    <mxGeometry relative="1" as="geometry">
                        <Array as="points">
                            <mxPoint x="642" y="669"/>
                            <mxPoint x="642" y="447"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="6" value="" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=none;strokeColor=#FF3333;fontSize=20;fillColor=none;gradientColor=none;strokeWidth=2;" vertex="1" parent="1">
                    <mxGeometry x="204" y="648" width="422" height="42" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="问题：在 Delegate 这条路径上，除了在 Aggregator 上发生一次外，登录和鉴权会不会在 Master 和 Extension 上发生？" style="text;strokeColor=#b85450;align=center;fillColor=#f8cecc;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;strokeWidth=2;fontSize=20;" vertex="1" parent="1">
                    <mxGeometry x="672" y="167" width="384" height="162" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="答案：不会，这是多余的验证。在形成 delegation 链时，下一个 Server 的 unprotectedhandler 被使用，它时未经 Filter 包裹的，自然不会触发登录个鉴权" style="text;strokeColor=#82b366;align=center;fillColor=#d5e8d4;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;strokeWidth=2;fontSize=20;" vertex="1" parent="1">
                    <mxGeometry x="672" y="366" width="384" height="162" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="触发登录和鉴权" style="text;strokeColor=none;fillColor=none;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;strokeWidth=2;fontSize=40;" vertex="1" parent="1">
                    <mxGeometry x="-715" y="-90" width="299" height="85" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="" style="edgeStyle=none;orthogonalLoop=1;jettySize=auto;html=1;rounded=0;fontSize=40;endArrow=open;sourcePerimeterSpacing=8;targetPerimeterSpacing=8;shape=link;" edge="1" parent="1">
                    <mxGeometry width="140" relative="1" as="geometry">
                        <mxPoint x="-715" y="-4" as="sourcePoint"/>
                        <mxPoint x="1109" y="-4" as="targetPoint"/>
                        <Array as="points"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="13" value="1. delegate 路线" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=none;strokeColor=#FF3333;strokeWidth=2;fontSize=40;fillColor=none;gradientColor=none;" vertex="1" parent="1">
                    <mxGeometry x="-715" y="13" width="355" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="2. Proxy 机制" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=none;strokeColor=#FF3333;strokeWidth=2;fontSize=40;fillColor=none;gradientColor=none;" vertex="1" parent="1">
                    <mxGeometry x="-727" y="794" width="355" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="&lt;span style=&quot;text-align: left; font-size: 26px;&quot;&gt;staging/src/k8s.io/kube-aggregator/pkg/apiserver/apiserver.go&lt;/span&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;fontColor=#000000;darkOpacity=0.05;fillColor=#FFF9B2;strokeColor=none;fillStyle=solid;direction=west;gradientDirection=north;gradientColor=#FFF2A1;shadow=1;size=20;pointerEvents=1;labelBackgroundColor=none;strokeWidth=2;fontSize=26;" vertex="1" parent="1">
                    <mxGeometry x="-724" y="890" width="740" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="19" value="&lt;br&gt;&lt;div style=&quot;color: rgb(255, 255, 255); background-color: rgb(32, 40, 49); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; font-size: 20px; line-height: 27px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// AddAPIService adds an API service. &amp;nbsp;It is not thread-safe, so only call it on one thread at a time please.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// It's a slow moving API, so its ok to run the controller on a single thread&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; (s &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;APIAggregator) &lt;/span&gt;&lt;span style=&quot;color: #ffc66d;&quot;&gt;AddAPIService&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;(apiService &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;v1.APIService) &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// if the proxyHandler already exists, it needs to be updated. The aggregation bits do not&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// since they are wired against listers because they require multiple resources to respond&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; proxyHandler, exists &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; s.proxyHandlers[apiService.Name]; exists {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; proxyHandler.updateAPIService(apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; s.openAPIAggregationController &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.openAPIAggregationController.UpdateAPIService(proxyHandler, apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; s.openAPIV3AggregationController &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.openAPIV3AggregationController.UpdateAPIService(proxyHandler, apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; proxyPath &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;/apis/&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; apiService.Spec.Group &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; apiService.Spec.Version&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// v1. is a special case for the legacy API. &amp;nbsp;It proxies to a wider set of endpoints.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; apiService.Name &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; legacyAPIServiceName {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; proxyPath &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;/api&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #55616c;font-style: italic;&quot;&gt;// register the proxy handler&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; proxyHandler &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;proxyHandler{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; localDelegate: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.delegateHandler,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; proxyCurrentCertKeyContent: s.proxyCurrentCertKeyContent,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; proxyTransport: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.proxyTransport,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; serviceResolver: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.serviceResolver,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; egressSelector: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.egressSelector,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; proxyHandler.updateAPIService(apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; s.openAPIAggregationController &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.openAPIAggregationController.AddAPIService(proxyHandler, apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff92bb;font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; s.openAPIV3AggregationController &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; nil {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.openAPIV3AggregationController.AddAPIService(proxyHandler, apiService)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; s.proxyHandlers[apiService.Name] &lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; proxyHandler&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; s.GenericAPIServer.Handler.NonGoRestfulMux.Handle(proxyPath, proxyHandler)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&amp;nbsp; &amp;nbsp; s.GenericAPIServer.Handler.NonGoRestfulMux.UnlistedHandlePrefix(proxyPath&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #3d8beb;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color: #40bf77;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;, proxyHandler)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;" style="text;whiteSpace=wrap;html=1;fontSize=26;" vertex="1" parent="1">
                    <mxGeometry x="-727" y="930" width="1217" height="1120" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="问题：在 Proxy 这条路径上，为什么会发生登录和鉴权呢？" style="text;strokeColor=#b85450;align=center;fillColor=#f8cecc;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;strokeWidth=2;fontSize=20;" vertex="1" parent="1">
                    <mxGeometry x="672" y="966" width="384" height="162" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="答案：这是在 Aggregator Server 内，给一个 APIService 对象代表的 API Group 赋予的 Http Handler。我们看到还是交给由 gereric server 的 NonGoRestfulMux 了，那么每个 Request 到来后，Filter Chain 就会被执行，从而触发其中的登录和鉴权（NonGoRestfulMux&amp;nbsp;实际上在 'director' 背后，承接 director 转接过来的请求，而 director 时经过 Filter 包装的）" style="text;strokeColor=#82b366;align=center;fillColor=#d5e8d4;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;strokeWidth=2;fontSize=20;" vertex="1" parent="1">
                    <mxGeometry x="672" y="1200" width="384" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="25" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=26;endArrow=open;sourcePerimeterSpacing=8;targetPerimeterSpacing=8;" edge="1" parent="1" source="24" target="21">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=none;strokeColor=#FF3333;fontSize=20;fillColor=none;gradientColor=none;strokeWidth=2;" vertex="1" parent="1">
                    <mxGeometry x="-690" y="2020" width="1050" height="60" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>